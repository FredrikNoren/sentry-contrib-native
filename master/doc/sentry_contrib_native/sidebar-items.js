initSidebarItems({"enum":[["Consent","The state of user consent."],["Error","Sentry errors."],["Interface","Sentry event interface."],["Level","Sentry levels for events and breadcrumbs."],["Value","Represents a Sentry protocol value."]],"fn":[["clear_modulecache","Clears the internal module cache."],["end_session","Ends a session."],["remove_context","Removes the context object with the specified key."],["remove_extra","Removes the extra with the specified `key`."],["remove_fingerprint","Removes the fingerprint."],["remove_tag","Removes the tag with the specified `key`."],["remove_transaction","Removes the transaction."],["remove_user","Removes a user."],["set_context","Sets a context object."],["set_extra","Sets extra information."],["set_fingerprint","Sets the event fingerprint."],["set_hook","Panic handler to send an event with the current stacktrace to Sentry."],["set_level","Sets the event level."],["set_tag","Sets a tag."],["set_transaction","Sets the transaction."],["shutdown","Shuts down the Sentry client and forces transports to flush out."],["start_session","Starts a new session."],["user_consent_get","Checks the current state of user consent."],["user_consent_give","Gives user consent."],["user_consent_reset","Resets the user consent (back to unknown)."],["user_consent_revoke","Revokes user consent."]],"mod":[["breadcrumb","Sentry breadcrumb implementation."],["event","Sentry event implementation."],["ffi","FFI helper types to communicate with `sentry-native`."],["object","Sentry object implementation, represents common functionality between `Map`, `Breadcrumb`, `Event`, and `User`."],["options","Sentry options implementation."],["panic","Sentry supported panic handler."],["user","Sentry user implementation."],["value","Sentry value implementation."]],"struct":[["Breadcrumb","A Sentry breadcrumb."],["Event","A Sentry event."],["Options","The Sentry client options."],["Shutdown","Automatically shuts down the Sentry client on drop."],["User","A Sentry user."],["Uuid","A Sentry UUID."]],"trait":[["BeforeSend","Trait to help pass data to [`Options::set_before_send`]."]]});